import { readdirSync, readFileSync, writeFileSync, mkdirSync } from 'node:fs';
import { basename } from 'node:path';
import matter from 'gray-matter';import { marked } from 'marked';import slugify from 'slugify';
const posts='posts', out='blog';mkdirSync(out,{recursive:true});const cards=[];
readdirSync(posts).filter(f=>f.endsWith('.md')).forEach(file=>{const raw=readFileSync(`${posts}/${file}`,'utf-8');const {data,content}=matter(raw);const slug=data.slug||slugify(basename(file,'.md'),{lower:true,strict:true});const html=marked.parse(content);writeFileSync(`${out}/${slug}.html`,`<!DOCTYPE html><html lang="ru"><head><meta charset="utf-8"><title>${data.title}</title><meta name="description" content="${data.description||''}"><link rel="stylesheet" href="../src/styles.css"></head><body><main class="container">${html}</main></body></html>`);cards.push(`<article class="pf-card"><h3 class="pf-title">${data.title}</h3><a class="btn" href="blog/${slug}.html">Читать</a></article>`);});writeFileSync('blog.html',`<!DOCTYPE html><html lang="ru"><head><meta charset="utf-8"><title>Блог</title><link rel="stylesheet" href="src/styles.css"></head><body><main class="container"><h1 style="text-align:center">Блог</h1><div class="cards-grid">${cards.join('')}</div></main></body></html>`);